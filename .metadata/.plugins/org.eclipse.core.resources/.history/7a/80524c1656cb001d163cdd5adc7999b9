package model;

import java.util.ArrayList;
import exceptions.*;

public class Banco {
	private String nombre;
	private ArrayList<Usuario>listaUsuarios = new ArrayList<Usuario>();
	private ArrayList<Cuenta>listaCuentas = new ArrayList<Cuenta>();
	
	
	public Banco(String nombre, ArrayList<Cuenta> listaCuentas) {
		this.nombre = nombre;
		this.listaCuentas = listaCuentas;
	}


	public String getNombre() {
		return nombre;
	}


	public void setNombre(String nombre) {
		this.nombre = nombre;
	}


	public ArrayList<Usuario> getListaUsuarios() {
		return listaUsuarios;
	}


	public void setListaUsuarios(ArrayList<Usuario> listaUsuarios) {
		this.listaUsuarios = listaUsuarios;
	}


	public ArrayList<Cuenta> getListaCuentas() {
		return listaCuentas;
	}


	public void setListaCuentas(ArrayList<Cuenta> listaCuentas) {
		this.listaCuentas = listaCuentas;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Banco other = (Banco) obj;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		return true;
	}


	@Override
	public String toString() {
		return "Banco [nombre=" + nombre + ", listaUsuarios=" + listaUsuarios + ", listaCuentas=" + listaCuentas + "]";
	}
	

	
	
	public Cuenta crearCuenta(String id, int saldo, String clave, Usuario usuario) throws Exception{
		if(existeCuenta(id))
			throw new IdYaExisteException("Esta numero de cuenta ya se encuentra registrada");
		
		if (saldo==0 || clave.equals("")|| usuario==null)
			throw new ParametroVacioException("Alguno de los parámetros indicados es está vacío");

		Cuenta cuenta = new Cuenta(id, saldo, clave, usuario);
		this.listaCuentas.add(cuenta);
		
		return cuenta;
		
	}


	private boolean existeCuenta(String id)  throws NullPointerException {
		for (Usuario u : listaUsuarios) {
			if(u.getCedula().equals(id)) return true;
			
		}			
		return false;
	}
	
	public void actualizarCuenta(String id, String clave, String nuevoNombre, String nuevoApellido){
		if(!id.equals("")){
		
			for(Cuenta c : listaCuentas){
				if(c != null && c.getId() != null && c.getId().equals(id) && c.getClave().equals(clave)){
					if(!nuevoNombre.equals("")) c.getUsuario().setNombre(nuevoNombre);
					if(!nuevoApellido.equals("")) c.getUsuario().setApellido(nuevoApellido);
				}
			}
		}
	}
	
	public void eliminarCuenta(String id, String clave) throws Exception{
		
		if(!existeCuenta(id))
			throw new CuentaException("no existe ninguna cuenta con id "+id+" registrado en el Banco");
		for(Cuenta c: listaCuentas) {
			if(c.getId().equals(id) && c.getClave().equals(clave))
				listaCuentas.remove(c);
			break;
		}
	}
	
}
