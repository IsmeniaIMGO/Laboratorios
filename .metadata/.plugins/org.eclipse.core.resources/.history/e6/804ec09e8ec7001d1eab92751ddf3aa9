package c_users;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;



public class UsersTCPServer {

	
	public static final int PORT = 3400;
	private ServerSocket listener;
	private Socket serverSideSocket;
	private PrintWriter toNetwork;
	private BufferedReader fromNetwork;
	
	public UsersTCPServer() {
		System.out.println("Echo TCP server is running on port: " + PORT);
	}
	
	public void init() throws Exception {
		listener = new ServerSocket(PORT);
		while (true) {
			serverSideSocket = listener.accept();
			createStreams(serverSideSocket);
			protocol(serverSideSocket);
		}
	}
	
	public void protocol(Socket socket) throws Exception {
		String message = fromNetwork.readLine();
		System.out.println("[Server] From client: " + message);
		
		HashMap<String, Integer> hashMap = new HashMap<>();
		
		if (message.charAt(0)=='L'&message.charAt(1)=='O'&
			message.charAt(2)=='G'&message.charAt(3)=='I'& 
			message.charAt(4)=='N') {
			
			String nombre = message.substring(6);
			String answer = "BIENVENIDO"+nombre+ "usted es el usuario: "+ hashMap.get(nombre);
			toNetwork.println(answer);
//			for (int i = 0; i < hashMap.size(); i++) {
//				hashMap.put(nombre, i);
//				String answer = "BIENVENIDO"+nombre+ "usted es el usuario: "+ hashMap.get(nombre);
//				toNetwork.println(answer);
//			}			
		}
	}
	
	private void createStreams(Socket socket) throws Exception {
		toNetwork = new PrintWriter(socket.getOutputStream(), true);
		fromNetwork = new BufferedReader(new InputStreamReader(socket.getInputStream()));
	}
	public static void main(String args[]) throws Exception {
		UsersTCPServer es = new UsersTCPServer();
		es.init();
	}
}
