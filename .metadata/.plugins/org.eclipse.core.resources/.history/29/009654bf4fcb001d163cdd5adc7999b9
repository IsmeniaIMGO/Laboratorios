package controller;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.HashMap;


public class Servidor {
	
	public static final int PORT = 3400;
	private ServerSocket listener;
	private Socket serverSideSocket;
	private PrintWriter toNetwork;
	private BufferedReader fromNetwork;

	public Servidor() {
		System.out.println("Echo TCP server is running on port: " + PORT);
	}
	
	public void init() throws Exception {
		listener = new ServerSocket(PORT);
		while (true) {
			serverSideSocket = listener.accept();
			createStreams(serverSideSocket);
			protocol(serverSideSocket);
		}
	}
	
	public void protocol(Socket socket) throws Exception {
		String comando = fromNetwork.readLine();
		System.out.println("[Server] From client: " + comando);
					
		if (comando.equals("1")) {
			
			
		}else if (comando.equals("2")) {

		}else if (comando.equals("3")) {
			
		}else if (!comando.equals("1")||!comando.equals("2")||!comando.equals("3")){
			String answer = "error 400: comando no encontrado";
			toNetwork.println(answer);
		}
	}
	
	private void createStreams(Socket socket) throws Exception {
		toNetwork = new PrintWriter(socket.getOutputStream(), true);
		fromNetwork = new BufferedReader(new InputStreamReader(socket.getInputStream()));
	}
	public static void main(String args[]) throws Exception {
		Servidor es = new Servidor();
		es.init();
	}
}
